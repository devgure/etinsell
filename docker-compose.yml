version: '3.8'
services:
  mongo:
    image: mongo:6.0
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db

  api:
    build: ./services/api
    ports:
      - '4000:4000'
    environment:
      DATABASE_URL: mongodb://mongo:27017/etincell
    depends_on:
      - mongo

volumes:
  mongo-data:
version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    restart: unless-stopped
    volumes:
      - mongo-data:/data/db
    ports:
      - '27017:27017'

  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - '6379:6379'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'

  minio:
    image: minio/minio:RELEASE.2025-01-01T00-00-00Z
    command: server /data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - '9000:9000'
    volumes:
      - minio-data:/data

  gateway:
    build: ./gateway/bff-web
    ports:
      - '4000:4000'
    depends_on:
      - mongodb
      - redis

  payment:
    build: ./services/payment
    environment:
      DATABASE_URL: mongodb://mongodb:27017/etincel
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
    ports:
      - '3010:3010'
    depends_on:
      - mongodb

  ai-service:
    build: ./services/ai-service
    ports:
      - '8000:8000'
    depends_on:
      - redis

  ai-queue:
    build: ./services/ai-queue-node
    command: node worker.js
    depends_on:
      - ai-service
      - redis

  notification:
    build: ./services/notification-service
    ports:
      - '3020:3020'
    depends_on:
      - redis

  discovery:
    build: ./services/discovery-service
    ports:
      - '3040:3040'
    depends_on:
      - elasticsearch
      - redis

  media:
    build: ./services/media-service
    ports:
      - '3030:3030'
    depends_on:
      - minio

  nginx:
    image: nginx:1.25-alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./deploy/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - gateway

volumes:
  mongo-data:
  es-data:
  minio-data:

